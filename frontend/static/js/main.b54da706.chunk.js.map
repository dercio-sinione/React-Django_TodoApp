{"version":3,"sources":["serviceWorker.js","components/app.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","App","props","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","taskCompleted","this","fetch","response","json","data","setState","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","task","getElementById","focus","csrftoken","method","headers","body","JSON","stringify","e","preventDefault","url","target","value","className","onSubmit","style","flex","onChange","type","placeholder","map","index","key","onDoubleClick","onClick","marginLeft","React","Component","ReactDOM","render","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b54da706.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        // estado da aplicação\r\n        this.state = ({\r\n            todoList: [],\r\n            activeItem: {\r\n                id: null,\r\n                title: '',\r\n                completed: false,\r\n                },\r\n            editing: false,\r\n        });\r\n\r\n        this.fetchTasks = this.fetchTasks.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.getCookie = this.getCookie.bind(this);\r\n\r\n        this.startEdit = this.startEdit.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.taskCompleted = this.taskCompleted.bind(this);\r\n    }\r\n    \r\n    UNSAFE_componentWillMount(){\r\n        this.fetchTasks()\r\n    }\r\n\r\n    fetchTasks(){\r\n        // console.log('fetching tasks...')\r\n        fetch('http://127.0.0.1:8000/api/task-list/')\r\n        .then(response => response.json())\r\n        .then(data => \r\n            this.setState({\r\n                todoList: data\r\n            })\r\n            )\r\n    }\r\n\r\n    getCookie(name) {\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    startEdit(task){\r\n        this.setState({\r\n            activeItem: task,\r\n            editing: true\r\n        })\r\n        \r\n        document.getElementById('title').focus();\r\n    }\r\n\r\n    taskCompleted(task){\r\n        task.completed = !task.completed\r\n        // console.log(task.completed)\r\n\r\n        let csrftoken = this.getCookie('csrftoken') \r\n\r\n        fetch(`http://127.0.0.1:8000/api/task-update/${task.id}/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({'completed': task.completed, 'title':task.title})\r\n        }).then(response => {\r\n            this.fetchTasks()            \r\n        }).catch((error)=>{\r\n            console.log('Error:', error)\r\n        })\r\n\r\n    }\r\n\r\n    deleteItem(task){\r\n        let csrftoken = this.getCookie('csrftoken') \r\n\r\n        fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n        })\r\n        .then(response => {this.fetchTasks()})\r\n        .catch((error)=>{\r\n            console.log('Error:', error)\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        //console.log(\"ITEM:\", this.state.activeItem)\r\n\r\n        let csrftoken = this.getCookie('csrftoken') \r\n\r\n        let url = 'http://127.0.0.1:8000/api/task-create/'\r\n\r\n        if(this.state.editing){\r\n            url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`\r\n\r\n            this.setState({\r\n                editing: false\r\n            })\r\n        }\r\n\r\n        fetch(url,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(this.state.activeItem)\r\n        }).then(response => {\r\n            this.fetchTasks()\r\n            \r\n            this.setState({\r\n                activeItem: {\r\n                    id: null,\r\n                    title: '',\r\n                    completed: false,\r\n                }\r\n            })\r\n            \r\n        }).catch((error)=>{\r\n            console.log('Error:', error)\r\n        })\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            activeItem: {\r\n                id: this.state.activeItem.id,\r\n                title: e.target.value,\r\n                completed: this.state.activeItem.completed\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"container\">\r\n          <div id=\"task-container\">\r\n\r\n                {/* formulario */}\r\n              <div  id=\"form-wrapper\">\r\n                 <form onSubmit={this.handleSubmit}  id=\"form\">\r\n                    <div className=\"flex-wrapper\">\r\n                        <div style={{flex: 6}}>\r\n                            <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task..\" />\r\n                         </div>\r\n\r\n                         <div style={{flex: 1}}>\r\n                            <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\r\n                          </div>\r\n                      </div>\r\n                </form>\r\n              </div>\r\n\r\n              {/* Mapeando as tarefas */}\r\n                <div  id=\"list-wrapper\">         \r\n                {\r\n                    this.state.todoList.map((task,index)=>{\r\n                        return (\r\n                            <div key={index} className=\"task-wrapper flex-wrapper\"> \r\n                            \r\n                                {/* titulo da tarefa */}\r\n                                <div onDoubleClick={(()=>this.startEdit(task))} style={{flex: 7}}>\r\n                                {\r\n                                    task.completed\r\n                                    ? <strike>{task.title}</strike>\r\n                                    : <span>{task.title}</span>\r\n                                }\r\n                                </div>\r\n\r\n                               {/* Completed */}\r\n                                 <div style={{flex: 1}}>\r\n                                 {\r\n                                    task.completed\r\n                                    ? \r\n                                    <button onClick={()=> this.taskCompleted(task)} className=\"btn btn-sm btn-success\">Done</button>\r\n                                    :\r\n                                    <button onClick={()=> this.taskCompleted(task)} className=\"btn btn-sm btn-outline-success\">Done</button>\r\n                                    }\r\n                                </div>\r\n                                \r\n                                {/* btn editar */}\r\n                                <div style={{flex: 1}}>\r\n                                    <button onClick={()=> this.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\r\n                                </div>\r\n\r\n                                {/* btn Eliminar */}\r\n                                <div style={{flex: 1, marginLeft: '-10px'}}>\r\n                                    <button onClick={()=> this.deleteItem(task)} className=\"btn btn-sm btn-outline-danger\">Delete</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                </div>\r\n            </div>            \r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/app';\n\nReactDOM.render(\n    <div>\n        <App />\n    </div>,\n    document.getElementById('root')\n);\n  \nserviceWorker.register();"],"sourceRoot":""}